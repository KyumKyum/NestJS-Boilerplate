version: "3.9"

#networks:
#  kafka-service:
#    driver: bridge


services:
  # NestJS Service need to have 2 networks: -default, -kafka-service
  # TODO: Need to remove all env-related variables.

  db:
    image: postgres:9.6.15-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: zkvoting
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "6457:5432"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  serv:
    build:
      context: '.'
      dockerfile: Dockerfile
#    ports:
#      - "12543:12543"
#    environment:
#      DATABASE_HOST: localhost
#      DATABASE_PORT: 6457
#      DATABASE_USER: postgres
#      DATABASE_PASSWORD: postgres
#      DATABASE_NAME:
#      REDIS_HOST: localhost
#      REDIS_PORT: 6379
    depends_on:
      - db
      - redis



#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
#    ports:
#      - "2181:2181"
#    restart: unless-stopped
#    networks:
#      - kafka-service
#
#  kafka-broker-1: # Make it multiple if broker-cluster is required.
#    image: confluentinc/cp-kafka:latest
#    container_name: kafka-broker-1
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENERS: CLIENT://:9092,EXTERNAL://:9093 # Internally uses 9092 port, opens 9093 port for external access.
#      KAFKA_ADVERTISED_LISTENERS: CLIENT://kafka-broker-1:9092, EXTERNAL://localhost:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
#    ports:
#      - "9093:9093"
#    restart: unless-stopped
#    networks:
#      - kafka-service
#
#  kafka-broker-2: # Make it multiple if broker-cluster is required.
#    image: confluentinc/cp-kafka:latest
#    container_name: kafka-broker-2
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENERS: CLIENT://:9092,EXTERNAL://:9094 # Internally uses 9092 port, opens 9093 port for external access.
#      KAFKA_ADVERTISED_LISTENERS: CLIENT://kafka-broker-2:9092, EXTERNAL://localhost:9094
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
#    ports:
#      - "9094:9094"
#    restart: unless-stopped
#    networks:
#      - kafka-service
#
#  kafdrop: # Web UI for monitoring Apache Kafka Clusters
#    image: obsidiandynamics/kafdrop:latest
#    container_name: kafdrop
#    environment:
#      KAFKA_BROKERCONNECT: kafka-broker-1:9092, kafka-broker-2:9092
#      JVM_OPTS: "-Xms320M -Xmx640M -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
#      SERVER_PORT: 9000
#      MANAGEMENT_SERVER_PORT: 9000
#    ports:
#      - "9000:9000"
#    depends_on:
#      - kafka-broker-1
#    networks:
#      - kafka-service

volumes:
  postgres_data:
